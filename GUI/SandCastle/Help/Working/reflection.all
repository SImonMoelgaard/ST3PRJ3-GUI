<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="BuissnessLogic">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="DataAccessLogic">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="DTO">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="PresentationLogic">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:BuissnessLogic">
      <apidata name="BuissnessLogic" group="namespace" />
      <elements>
        <element api="T:BuissnessLogic.Alarm" />
        <element api="T:BuissnessLogic.IAlarm" />
        <element api="T:BuissnessLogic.Calibration" />
        <element api="T:BuissnessLogic.ICalibration" />
        <element api="T:BuissnessLogic.Controller" />
        <element api="T:BuissnessLogic.Filter" />
        <element api="T:BuissnessLogic.IFilter" />
      </elements>
    </api>
    <api id="T:BuissnessLogic.Alarm">
      <apidata name="Alarm" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:BuissnessLogic.IAlarm" ref="true" />
      </implements>
      <elements>
        <element api="F:BuissnessLogic.Alarm.sendRPi" />
        <element api="M:BuissnessLogic.Alarm.MuteAlarm" />
        <element api="M:BuissnessLogic.Alarm.#ctor" />
      </elements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Alarm.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Alarm" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Alarm.MuteAlarm">
      <apidata name="MuteAlarm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:BuissnessLogic.IAlarm.MuteAlarm">
          <type api="T:BuissnessLogic.IAlarm" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Alarm" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Alarm.sendRPi">
      <apidata name="sendRPi" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Alarm" ref="true" />
      </containers>
    </api>
    <api id="T:BuissnessLogic.Calibration">
      <apidata name="Calibration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:BuissnessLogic.ICalibration" ref="true" />
      </implements>
      <elements>
        <element api="F:BuissnessLogic.Calibration.receive" />
        <element api="F:BuissnessLogic.Calibration.send" />
        <element api="F:BuissnessLogic.Calibration.localDatabase" />
        <element api="F:BuissnessLogic.Calibration.rVal" />
        <element api="F:BuissnessLogic.Calibration._r2" />
        <element api="F:BuissnessLogic.Calibration.zeroval" />
        <element api="F:BuissnessLogic.Calibration.LinearRegression" />
        <element api="M:BuissnessLogic.Calibration.CalculateAAndB(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double)" />
        <element api="M:BuissnessLogic.Calibration.CalculateR2Val(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double)" />
        <element api="M:BuissnessLogic.Calibration.SaveCalval(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)" />
        <element api="M:BuissnessLogic.Calibration.#ctor" />
      </elements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Calibration.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Calibration._r2">
      <apidata name="_r2" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Calibration.CalculateR2Val(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double)">
      <apidata name="CalculateR2Val" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:BuissnessLogic.ICalibration.CalculateR2Val(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double)">
          <type api="T:BuissnessLogic.ICalibration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Calibration.CalculateAAndB(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double)">
      <apidata name="CalculateAAndB" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zv">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:BuissnessLogic.ICalibration.CalculateAAndB(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double)">
          <type api="T:BuissnessLogic.ICalibration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Calibration.LinearRegression">
      <apidata name="LinearRegression" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Calibration.localDatabase">
      <apidata name="localDatabase" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Calibration.receive">
      <apidata name="receive" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Calibration.rVal">
      <apidata name="rVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Calibration.SaveCalval(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)">
      <apidata name="SaveCalval" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zv">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="datetime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:BuissnessLogic.ICalibration.SaveCalval(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)">
          <type api="T:BuissnessLogic.ICalibration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Calibration.send">
      <apidata name="send" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Calibration.zeroval">
      <apidata name="zeroval" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </containers>
    </api>
    <api id="T:BuissnessLogic.Controller">
      <apidata name="Controller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:BuissnessLogic.Controller.sendrpi" />
        <element api="F:BuissnessLogic.Controller.recieveRPi" />
        <element api="F:BuissnessLogic.Controller.localDatabase" />
        <element api="F:BuissnessLogic.Controller.database" />
        <element api="F:BuissnessLogic.Controller.measurementList" />
        <element api="F:BuissnessLogic.Controller.measurementdata" />
        <element api="F:BuissnessLogic.Controller.data" />
        <element api="F:BuissnessLogic.Controller.caldata" />
        <element api="F:BuissnessLogic.Controller.valueDataList" />
        <element api="M:BuissnessLogic.Controller.openrecieveports" />
        <element api="M:BuissnessLogic.Controller.GetMeasurementData" />
        <element api="M:BuissnessLogic.Controller.RecieveDouble" />
        <element api="M:BuissnessLogic.Controller.GetCalVal" />
        <element api="M:BuissnessLogic.Controller.GetMeasurementLocal(System.String)" />
        <element api="M:BuissnessLogic.Controller.GetSocSecNb(System.String)" />
        <element api="M:BuissnessLogic.Controller.CheckLogin(System.String,System.String)" />
        <element api="M:BuissnessLogic.Controller.SendRPiData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:BuissnessLogic.Controller.SendEemergencydata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:BuissnessLogic.Controller.Command(System.String)" />
        <element api="M:BuissnessLogic.Controller.GetPatientValues" />
        <element api="M:BuissnessLogic.Controller.#ctor" />
      </elements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.caldata">
      <apidata name="caldata" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.CheckLogin(System.String,System.String)">
      <apidata name="CheckLogin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pw">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.Command(System.String)">
      <apidata name="Command" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.data">
      <apidata name="data" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.database">
      <apidata name="database" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.IDatabase" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.GetCalVal">
      <apidata name="GetCalVal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.GetMeasurementData">
      <apidata name="GetMeasurementData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.GetMeasurementLocal(System.String)">
      <apidata name="GetMeasurementLocal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="socSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.GetPatientValues">
      <apidata name="GetPatientValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_PatientData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.GetSocSecNb(System.String)">
      <apidata name="GetSocSecNb" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="SocSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.localDatabase">
      <apidata name="localDatabase" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.measurementdata">
      <apidata name="measurementdata" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.measurementList">
      <apidata name="measurementList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.openrecieveports">
      <apidata name="openrecieveports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.RecieveDouble">
      <apidata name="RecieveDouble" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.recieveRPi">
      <apidata name="recieveRPi" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.SendEemergencydata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="SendEemergencydata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.sendrpi">
      <apidata name="sendrpi" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Controller.SendRPiData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="SendRPiData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Controller.valueDataList">
      <apidata name="valueDataList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_PatientData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </containers>
    </api>
    <api id="T:BuissnessLogic.Filter">
      <apidata name="Filter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:BuissnessLogic.IFilter" ref="true" />
      </implements>
      <elements>
        <element api="F:BuissnessLogic.Filter.recieveRPi" />
        <element api="F:BuissnessLogic.Filter.measurementData" />
        <element api="M:BuissnessLogic.Filter.GetMeasurementDataFilter" />
        <element api="M:BuissnessLogic.Filter.#ctor" />
      </elements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Filter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Filter" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.Filter.GetMeasurementDataFilter">
      <apidata name="GetMeasurementDataFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:BuissnessLogic.IFilter.GetMeasurementDataFilter">
          <type api="T:BuissnessLogic.IFilter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Filter" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Filter.measurementData">
      <apidata name="measurementData" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Filter" ref="true" />
      </containers>
    </api>
    <api id="F:BuissnessLogic.Filter.recieveRPi">
      <apidata name="recieveRPi" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.Filter" ref="true" />
      </containers>
    </api>
    <api id="T:BuissnessLogic.IAlarm">
      <apidata name="IAlarm" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:BuissnessLogic.Alarm" ref="true" />
      </implementors>
      <elements>
        <element api="M:BuissnessLogic.IAlarm.MuteAlarm" />
      </elements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.IAlarm.MuteAlarm">
      <apidata name="MuteAlarm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.IAlarm" ref="true" />
      </containers>
    </api>
    <api id="T:BuissnessLogic.ICalibration">
      <apidata name="ICalibration" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:BuissnessLogic.Calibration" ref="true" />
      </implementors>
      <elements>
        <element api="M:BuissnessLogic.ICalibration.CalculateR2Val(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double)" />
        <element api="M:BuissnessLogic.ICalibration.SaveCalval(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)" />
        <element api="M:BuissnessLogic.ICalibration.CalculateAAndB(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.ICalibration.CalculateR2Val(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double)">
      <apidata name="CalculateR2Val" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.ICalibration" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.ICalibration.CalculateAAndB(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double)">
      <apidata name="CalculateAAndB" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zv">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.ICalibration" ref="true" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.ICalibration.SaveCalval(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)">
      <apidata name="SaveCalval" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zv">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="datetime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.ICalibration" ref="true" />
      </containers>
    </api>
    <api id="T:BuissnessLogic.IFilter">
      <apidata name="IFilter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:BuissnessLogic.Filter" ref="true" />
      </implementors>
      <elements>
        <element api="M:BuissnessLogic.IFilter.GetMeasurementDataFilter" />
      </elements>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
      </containers>
    </api>
    <api id="M:BuissnessLogic.IFilter.GetMeasurementDataFilter">
      <apidata name="GetMeasurementDataFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BuissnessLogic" module="BuissnessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BuissnessLogic" />
        <type api="T:BuissnessLogic.IFilter" ref="true" />
      </containers>
    </api>
    <api id="N:DataAccessLogic">
      <apidata name="DataAccessLogic" group="namespace" />
      <elements>
        <element api="T:DataAccessLogic.IReceiveRPi" />
        <element api="T:DataAccessLogic.ISendRPi" />
        <element api="T:DataAccessLogic.ReceiveRPi" />
        <element api="T:DataAccessLogic.SendRPi" />
        <element api="T:DataAccessLogic.Database" />
        <element api="T:DataAccessLogic.IDatabase" />
        <element api="T:DataAccessLogic.ILocalDatabase" />
        <element api="T:DataAccessLogic.LocalDatabase" />
      </elements>
    </api>
    <api id="T:DataAccessLogic.Database">
      <apidata name="Database" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DataAccessLogic.IDatabase" ref="true" />
      </implements>
      <elements>
        <element api="F:DataAccessLogic.Database.connection" />
        <element api="F:DataAccessLogic.Database.reader" />
        <element api="F:DataAccessLogic.Database.command" />
        <element api="F:DataAccessLogic.Database.DBlogin" />
        <element api="M:DataAccessLogic.Database.#ctor" />
        <element api="M:DataAccessLogic.Database.getSocSecNB(System.String)" />
        <element api="M:DataAccessLogic.Database.isUserRegistered(System.String,System.String)" />
        <element api="M:DataAccessLogic.Database.GetMeasurement(System.String)" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.Database.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.Database.command">
      <apidata name="command" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlClient.SqlCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.Database.connection">
      <apidata name="connection" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlClient.SqlConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.Database.DBlogin">
      <apidata name="DBlogin" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>F20ST2ITS2201810696</value>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.Database.GetMeasurement(System.String)">
      <apidata name="GetMeasurement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DataAccessLogic.IDatabase.GetMeasurement(System.String)">
          <type api="T:DataAccessLogic.IDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.Database.getSocSecNB(System.String)">
      <apidata name="getSocSecNB" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="SocSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.IDatabase.getSocSecNB(System.String)">
          <type api="T:DataAccessLogic.IDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.Database.isUserRegistered(System.String,System.String)">
      <apidata name="isUserRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pw">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.IDatabase.isUserRegistered(System.String,System.String)">
          <type api="T:DataAccessLogic.IDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.Database.reader">
      <apidata name="reader" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlClient.SqlDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.Database" ref="true" />
      </containers>
    </api>
    <api id="T:DataAccessLogic.IDatabase">
      <apidata name="IDatabase" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DataAccessLogic.Database" ref="true" />
      </implementors>
      <elements>
        <element api="M:DataAccessLogic.IDatabase.GetMeasurement(System.String)" />
        <element api="M:DataAccessLogic.IDatabase.isUserRegistered(System.String,System.String)" />
        <element api="M:DataAccessLogic.IDatabase.getSocSecNB(System.String)" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.IDatabase.GetMeasurement(System.String)">
      <apidata name="GetMeasurement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="socSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.IDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.IDatabase.getSocSecNB(System.String)">
      <apidata name="getSocSecNB" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="SocSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.IDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.IDatabase.isUserRegistered(System.String,System.String)">
      <apidata name="isUserRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pw">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.IDatabase" ref="true" />
      </containers>
    </api>
    <api id="T:DataAccessLogic.ILocalDatabase">
      <apidata name="ILocalDatabase" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </implementors>
      <elements>
        <element api="M:DataAccessLogic.ILocalDatabase.SaveMeasurement(System.String,System.Double,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:DataAccessLogic.ILocalDatabase.SavePatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.ILocalDatabase.SaveCalVal(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)" />
        <element api="M:DataAccessLogic.ILocalDatabase.ReadPatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.ILocalDatabase.GetCalVal" />
        <element api="M:DataAccessLogic.ILocalDatabase.isUserRegistered(System.String,System.String)" />
        <element api="M:DataAccessLogic.ILocalDatabase.getSocSecNB(System.String)" />
        <element api="M:DataAccessLogic.ILocalDatabase.Savelogin" />
        <element api="M:DataAccessLogic.ILocalDatabase.ValuedataGet" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.GetCalVal">
      <apidata name="GetCalVal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.getSocSecNB(System.String)">
      <apidata name="getSocSecNB" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="SocSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.isUserRegistered(System.String,System.String)">
      <apidata name="isUserRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pw">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.ReadPatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="ReadPatientData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.SaveCalVal(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)">
      <apidata name="SaveCalVal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zv">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="datetime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.Savelogin">
      <apidata name="Savelogin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.SaveMeasurement(System.String,System.Double,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name="SaveMeasurement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mmhg">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="tid">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="highSys">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowSys">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="highDia">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowDia">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="highMean">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowMean">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="sys">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dia">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="mean">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pulse">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="batterystatus">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.SavePatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="SavePatientData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ILocalDatabase.ValuedataGet">
      <apidata name="ValuedataGet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_PatientData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="T:DataAccessLogic.IReceiveRPi">
      <apidata name="IReceiveRPi" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </implementors>
      <elements>
        <element api="M:DataAccessLogic.IReceiveRPi.RecieveCalculatedValues" />
        <element api="M:DataAccessLogic.IReceiveRPi.OpenRecievePorts" />
        <element api="M:DataAccessLogic.IReceiveRPi.RecieveDataPoints" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.IReceiveRPi.OpenRecievePorts">
      <apidata name="OpenRecievePorts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.IReceiveRPi.RecieveCalculatedValues">
      <apidata name="RecieveCalculatedValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.IReceiveRPi.RecieveDataPoints">
      <apidata name="RecieveDataPoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="T:DataAccessLogic.ISendRPi">
      <apidata name="ISendRPi" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </implementors>
      <elements>
        <element api="M:DataAccessLogic.ISendRPi.Command(System.String)" />
        <element api="M:DataAccessLogic.ISendRPi.sendemergencydata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.ISendRPi.sendpatientdata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.ISendRPi.OpenSendPorts" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ISendRPi.Command(System.String)">
      <apidata name="Command" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ISendRPi.OpenSendPorts">
      <apidata name="OpenSendPorts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ISendRPi.sendemergencydata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="sendemergencydata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ISendRPi.sendpatientdata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="sendpatientdata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </containers>
    </api>
    <api id="T:DataAccessLogic.LocalDatabase">
      <apidata name="LocalDatabase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </implements>
      <elements>
        <element api="F:DataAccessLogic.LocalDatabase.result" />
        <element api="M:DataAccessLogic.LocalDatabase.latestfile(System.String)" />
        <element api="M:DataAccessLogic.LocalDatabase.SaveMeasurement(System.String,System.Double,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:DataAccessLogic.LocalDatabase.SavePatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.LocalDatabase.ReadPatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.LocalDatabase.SaveCalVal(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)" />
        <element api="M:DataAccessLogic.LocalDatabase.GetCalVal" />
        <element api="M:DataAccessLogic.LocalDatabase.ValuedataGet" />
        <element api="M:DataAccessLogic.LocalDatabase.isUserRegistered(System.String,System.String)" />
        <element api="M:DataAccessLogic.LocalDatabase.getSocSecNB(System.String)" />
        <element api="M:DataAccessLogic.LocalDatabase.Savelogin" />
        <element api="M:DataAccessLogic.LocalDatabase.#ctor" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.GetCalVal">
      <apidata name="GetCalVal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.GetCalVal">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.getSocSecNB(System.String)">
      <apidata name="getSocSecNB" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="SocSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.getSocSecNB(System.String)">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.isUserRegistered(System.String,System.String)">
      <apidata name="isUserRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pw">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.isUserRegistered(System.String,System.String)">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.latestfile(System.String)">
      <apidata name="latestfile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="latestfile">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.ReadPatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="ReadPatientData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.ReadPatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.LocalDatabase.result">
      <apidata name="result" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.SaveCalVal(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)">
      <apidata name="SaveCalVal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zv">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="datetime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.SaveCalVal(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.Savelogin">
      <apidata name="Savelogin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.Savelogin">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.SaveMeasurement(System.String,System.Double,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name="SaveMeasurement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mmhg">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="tid">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="highSys">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowSys">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="highDia">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowDia">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="highMean">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowMean">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="sys">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dia">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="mean">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pulse">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="batterystatus">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.SaveMeasurement(System.String,System.Double,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.SavePatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="SavePatientData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.SavePatientData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.LocalDatabase.ValuedataGet">
      <apidata name="ValuedataGet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_PatientData" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ILocalDatabase.ValuedataGet">
          <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </containers>
    </api>
    <api id="T:DataAccessLogic.ReceiveRPi">
      <apidata name="ReceiveRPi" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
      </implements>
      <elements>
        <element api="F:DataAccessLogic.ReceiveRPi.local" />
        <element api="F:DataAccessLogic.ReceiveRPi.measurements" />
        <element api="F:DataAccessLogic.ReceiveRPi.listener" />
        <element api="F:DataAccessLogic.ReceiveRPi.ListenerDouble" />
        <element api="F:DataAccessLogic.ReceiveRPi.groupEP" />
        <element api="F:DataAccessLogic.ReceiveRPi.groupEPDouble" />
        <element api="M:DataAccessLogic.ReceiveRPi.OpenRecievePorts" />
        <element api="M:DataAccessLogic.ReceiveRPi.RecieveDataPoints" />
        <element api="M:DataAccessLogic.ReceiveRPi.RecieveCalculatedValues" />
        <element api="M:DataAccessLogic.ReceiveRPi.#ctor" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ReceiveRPi.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.ReceiveRPi.groupEP">
      <apidata name="groupEP" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.ReceiveRPi.groupEPDouble">
      <apidata name="groupEPDouble" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.ReceiveRPi.listener">
      <apidata name="listener" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Sockets.UdpClient" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.ReceiveRPi.ListenerDouble">
      <apidata name="ListenerDouble" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Sockets.UdpClient" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.ReceiveRPi.local">
      <apidata name="local" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.ILocalDatabase" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.ReceiveRPi.measurements">
      <apidata name="measurements" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ReceiveRPi.OpenRecievePorts">
      <apidata name="OpenRecievePorts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:DataAccessLogic.IReceiveRPi.OpenRecievePorts">
          <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ReceiveRPi.RecieveCalculatedValues">
      <apidata name="RecieveCalculatedValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.IReceiveRPi.RecieveCalculatedValues">
          <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.ReceiveRPi.RecieveDataPoints">
      <apidata name="RecieveDataPoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DataAccessLogic.IReceiveRPi.RecieveDataPoints">
          <type api="T:DataAccessLogic.IReceiveRPi" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.ReceiveRPi" ref="true" />
      </containers>
    </api>
    <api id="T:DataAccessLogic.SendRPi">
      <apidata name="SendRPi" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DataAccessLogic.ISendRPi" ref="true" />
      </implements>
      <elements>
        <element api="F:DataAccessLogic.SendRPi.broadcast" />
        <element api="F:DataAccessLogic.SendRPi.socket" />
        <element api="F:DataAccessLogic.SendRPi.datasocket" />
        <element api="F:DataAccessLogic.SendRPi.emergencydatasocket" />
        <element api="F:DataAccessLogic.SendRPi.epCommand" />
        <element api="F:DataAccessLogic.SendRPi.epPatientdata" />
        <element api="F:DataAccessLogic.SendRPi.epEmergencydata" />
        <element api="F:DataAccessLogic.SendRPi.local" />
        <element api="M:DataAccessLogic.SendRPi.OpenSendPorts" />
        <element api="M:DataAccessLogic.SendRPi.Command(System.String)" />
        <element api="M:DataAccessLogic.SendRPi.sendemergencydata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.SendRPi.sendpatientdata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="M:DataAccessLogic.SendRPi.#ctor" />
      </elements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.SendRPi.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.broadcast">
      <apidata name="broadcast" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.SendRPi.Command(System.String)">
      <apidata name="Command" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ISendRPi.Command(System.String)">
          <type api="T:DataAccessLogic.ISendRPi" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.datasocket">
      <apidata name="datasocket" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Sockets.Socket" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.emergencydatasocket">
      <apidata name="emergencydatasocket" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Sockets.Socket" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.epCommand">
      <apidata name="epCommand" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.epEmergencydata">
      <apidata name="epEmergencydata" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.epPatientdata">
      <apidata name="epPatientdata" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.local">
      <apidata name="local" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DataAccessLogic.LocalDatabase" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.SendRPi.OpenSendPorts">
      <apidata name="OpenSendPorts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:DataAccessLogic.ISendRPi.OpenSendPorts">
          <type api="T:DataAccessLogic.ISendRPi" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.SendRPi.sendemergencydata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="sendemergencydata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ISendRPi.sendemergencydata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
          <type api="T:DataAccessLogic.ISendRPi" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="M:DataAccessLogic.SendRPi.sendpatientdata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name="sendpatientdata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="SysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="SysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DiaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanlow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Meanhigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CprPatient">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Calval">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Zeroval">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:DataAccessLogic.ISendRPi.sendpatientdata(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
          <type api="T:DataAccessLogic.ISendRPi" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="F:DataAccessLogic.SendRPi.socket">
      <apidata name="socket" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Sockets.Socket" ref="true" />
      </returns>
      <containers>
        <library assembly="DataAccessLogic" module="DataAccessLogic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DataAccessLogic" />
        <type api="T:DataAccessLogic.SendRPi" ref="true" />
      </containers>
    </api>
    <api id="N:DTO">
      <apidata name="DTO" group="namespace" />
      <elements>
        <element api="T:DTO.DTO_CalVal" />
        <element api="T:DTO.DTO_Measurement" />
        <element api="T:DTO.DTO_PatientData" />
        <element api="T:DTO.DTO_UserData" />
      </elements>
    </api>
    <api id="T:DTO.DTO_CalVal">
      <apidata name="DTO_CalVal" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:DTO.DTO_CalVal.#ctor(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)" />
        <element api="P:DTO.DTO_CalVal.CalReference" />
        <element api="P:DTO.DTO_CalVal.CalMeasured" />
        <element api="P:DTO.DTO_CalVal.R2" />
        <element api="P:DTO.DTO_CalVal.A" />
        <element api="P:DTO.DTO_CalVal.B" />
        <element api="P:DTO.DTO_CalVal.Zv" />
        <element api="P:DTO.DTO_CalVal.Datetime" />
      </elements>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
      </containers>
    </api>
    <api id="M:DTO.DTO_CalVal.#ctor(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double,System.DateTime)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="calReference">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="calMeasured">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="r2">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zv">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="datetime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_CalVal.A">
      <apidata name="A" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_A" />
      <setter name="set_A" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_CalVal.B">
      <apidata name="B" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_B" />
      <setter name="set_B" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_CalVal.CalMeasured">
      <apidata name="CalMeasured" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CalMeasured" />
      <setter name="set_CalMeasured" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_CalVal.CalReference">
      <apidata name="CalReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CalReference" />
      <setter name="set_CalReference" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_CalVal.Datetime">
      <apidata name="Datetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Datetime" />
      <setter name="set_Datetime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_CalVal.R2">
      <apidata name="R2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_R2" />
      <setter name="set_R2" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_CalVal.Zv">
      <apidata name="Zv" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Zv" />
      <setter name="set_Zv" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_CalVal" ref="true" />
      </containers>
    </api>
    <api id="T:DTO.DTO_Measurement">
      <apidata name="DTO_Measurement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:DTO.DTO_Measurement.#ctor(System.String,System.Double,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="P:DTO.DTO_Measurement.mmHg" />
        <element api="P:DTO.DTO_Measurement.Tid" />
        <element api="P:DTO.DTO_Measurement.CalculatedSys" />
        <element api="P:DTO.DTO_Measurement.CalculatedDia" />
        <element api="P:DTO.DTO_Measurement.CalculatedMean" />
        <element api="P:DTO.DTO_Measurement.CalculatedPulse" />
        <element api="P:DTO.DTO_Measurement.HighSys" />
        <element api="P:DTO.DTO_Measurement.LowSys" />
        <element api="P:DTO.DTO_Measurement.HighDia" />
        <element api="P:DTO.DTO_Measurement.LowDia" />
        <element api="P:DTO.DTO_Measurement.HighMean" />
        <element api="P:DTO.DTO_Measurement.LowMean" />
        <element api="P:DTO.DTO_Measurement.Batterystatus" />
        <element api="P:DTO.DTO_Measurement.SocSecNB" />
      </elements>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
      </containers>
    </api>
    <api id="M:DTO.DTO_Measurement.#ctor(System.String,System.Double,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="socSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mmhg">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="tid">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="highSys">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowSys">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="highDia">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowDia">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="highMean">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lowMean">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="sys">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dia">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="mean">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pulse">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="batterystatus">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.Batterystatus">
      <apidata name="Batterystatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Batterystatus" />
      <setter name="set_Batterystatus" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.CalculatedDia">
      <apidata name="CalculatedDia" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CalculatedDia" />
      <setter name="set_CalculatedDia" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.CalculatedMean">
      <apidata name="CalculatedMean" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CalculatedMean" />
      <setter name="set_CalculatedMean" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.CalculatedPulse">
      <apidata name="CalculatedPulse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CalculatedPulse" />
      <setter name="set_CalculatedPulse" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.CalculatedSys">
      <apidata name="CalculatedSys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CalculatedSys" />
      <setter name="set_CalculatedSys" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.HighDia">
      <apidata name="HighDia" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighDia" />
      <setter name="set_HighDia" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.HighMean">
      <apidata name="HighMean" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighMean" />
      <setter name="set_HighMean" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.HighSys">
      <apidata name="HighSys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighSys" />
      <setter name="set_HighSys" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.LowDia">
      <apidata name="LowDia" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LowDia" />
      <setter name="set_LowDia" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.LowMean">
      <apidata name="LowMean" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LowMean" />
      <setter name="set_LowMean" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.LowSys">
      <apidata name="LowSys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LowSys" />
      <setter name="set_LowSys" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.mmHg">
      <apidata name="mmHg" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_mmHg" />
      <setter name="set_mmHg" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.SocSecNB">
      <apidata name="SocSecNB" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SocSecNB" />
      <setter name="set_SocSecNB" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_Measurement.Tid">
      <apidata name="Tid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Tid" />
      <setter name="set_Tid" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_Measurement" ref="true" />
      </containers>
    </api>
    <api id="T:DTO.DTO_PatientData">
      <apidata name="DTO_PatientData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:DTO.DTO_PatientData.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)" />
        <element api="P:DTO.DTO_PatientData.HighSys" />
        <element api="P:DTO.DTO_PatientData.LowSys" />
        <element api="P:DTO.DTO_PatientData.HighDia" />
        <element api="P:DTO.DTO_PatientData.LowDia" />
        <element api="P:DTO.DTO_PatientData.HighMean" />
        <element api="P:DTO.DTO_PatientData.LowMean" />
        <element api="P:DTO.DTO_PatientData.ZeroVal" />
        <element api="P:DTO.DTO_PatientData.SocSecNB" />
        <element api="P:DTO.DTO_PatientData.CalVal" />
      </elements>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
      </containers>
    </api>
    <api id="M:DTO.DTO_PatientData.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sysLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sysHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="diaLow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="diaHigh">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="lowMean">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="highMean">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="socSecNB">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="calVal">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="zeroVal">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.CalVal">
      <apidata name="CalVal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CalVal" />
      <setter name="set_CalVal" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.HighDia">
      <apidata name="HighDia" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighDia" />
      <setter name="set_HighDia" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.HighMean">
      <apidata name="HighMean" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighMean" />
      <setter name="set_HighMean" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.HighSys">
      <apidata name="HighSys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighSys" />
      <setter name="set_HighSys" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.LowDia">
      <apidata name="LowDia" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LowDia" />
      <setter name="set_LowDia" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.LowMean">
      <apidata name="LowMean" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LowMean" />
      <setter name="set_LowMean" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.LowSys">
      <apidata name="LowSys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LowSys" />
      <setter name="set_LowSys" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.SocSecNB">
      <apidata name="SocSecNB" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SocSecNB" />
      <setter name="set_SocSecNB" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_PatientData.ZeroVal">
      <apidata name="ZeroVal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ZeroVal" />
      <setter name="set_ZeroVal" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_PatientData" ref="true" />
      </containers>
    </api>
    <api id="T:DTO.DTO_UserData">
      <apidata name="DTO_UserData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:DTO.DTO_UserData.#ctor(System.String,System.String)" />
        <element api="P:DTO.DTO_UserData.Username" />
        <element api="P:DTO.DTO_UserData.Password" />
      </elements>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
      </containers>
    </api>
    <api id="M:DTO.DTO_UserData.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_UserData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_UserData.Password">
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_UserData" ref="true" />
      </containers>
    </api>
    <api id="P:DTO.DTO_UserData.Username">
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="DTO" module="DTO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DTO" />
        <type api="T:DTO.DTO_UserData" ref="true" />
      </containers>
    </api>
    <api id="N:PresentationLogic">
      <apidata name="PresentationLogic" group="namespace" />
      <elements>
        <element api="T:PresentationLogic.App" />
        <element api="T:PresentationLogic.ChangeDataWindow" />
        <element api="T:PresentationLogic.MainWindow" />
        <element api="T:PresentationLogic.MeasurementModel" />
      </elements>
    </api>
    <api id="T:PresentationLogic.App">
      <apidata name="App" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Application" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:PresentationLogic.App._contentLoaded" />
        <element api="M:PresentationLogic.App.InitializeComponent" />
        <element api="M:PresentationLogic.App.Main" />
        <element api="M:PresentationLogic.App.#ctor" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
      </containers>
    </api>
    <api id="M:PresentationLogic.App.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.App" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.App._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.App" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.App.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.App" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.App.Main">
      <apidata name="Main" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.App" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.ChangeDataWindow">
      <apidata name="ChangeDataWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.ChangeDataWindow.controller" />
        <element api="F:PresentationLogic.ChangeDataWindow.Valuedata" />
        <element api="F:PresentationLogic.ChangeDataWindow.Next_B" />
        <element api="F:PresentationLogic.ChangeDataWindow.sysULimit_TB" />
        <element api="F:PresentationLogic.ChangeDataWindow.diaULimit_TB" />
        <element api="F:PresentationLogic.ChangeDataWindow.sysLLimit_TB" />
        <element api="F:PresentationLogic.ChangeDataWindow.diaLLimit_TB" />
        <element api="F:PresentationLogic.ChangeDataWindow.meanULimit_TB" />
        <element api="F:PresentationLogic.ChangeDataWindow.meanLLimit_TB" />
        <element api="F:PresentationLogic.ChangeDataWindow.ExitToMainWindow_B" />
        <element api="F:PresentationLogic.ChangeDataWindow._contentLoaded" />
        <element api="M:PresentationLogic.ChangeDataWindow.#ctor(BuissnessLogic.Controller)" />
        <element api="M:PresentationLogic.ChangeDataWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.ChangeDataWindow.Next_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.ChangeDataWindow.Next_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)" />
        <element api="M:PresentationLogic.ChangeDataWindow.ValueDataSet" />
        <element api="M:PresentationLogic.ChangeDataWindow.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
      </containers>
    </api>
    <api id="M:PresentationLogic.ChangeDataWindow.#ctor(BuissnessLogic.Controller)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="cw">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.diaLLimit_TB">
      <apidata name="diaLLimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.diaULimit_TB">
      <apidata name="diaULimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.ExitToMainWindow_B">
      <apidata name="ExitToMainWindow_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.ChangeDataWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ExitToMainWindow_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.ChangeDataWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.meanLLimit_TB">
      <apidata name="meanLLimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.meanULimit_TB">
      <apidata name="meanULimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.Next_B">
      <apidata name="Next_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.ChangeDataWindow.Next_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Next_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.ChangeDataWindow.Next_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
      <apidata name="Next_KeyDown" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.sysLLimit_TB">
      <apidata name="sysLLimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.sysULimit_TB">
      <apidata name="sysULimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.ChangeDataWindow.Valuedata">
      <apidata name="Valuedata" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_PatientData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.ChangeDataWindow.ValueDataSet">
      <apidata name="ValueDataSet" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.MainWindow">
      <apidata name="MainWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.MainWindow.dataWindow" />
        <element api="F:PresentationLogic.MainWindow.calibrationWindow" />
        <element api="F:PresentationLogic.MainWindow.measurementWindow" />
        <element api="F:PresentationLogic.MainWindow.loginWindow" />
        <element api="F:PresentationLogic.MainWindow.showDataWindow" />
        <element api="F:PresentationLogic.MainWindow.emergencyWindow" />
        <element api="F:PresentationLogic.MainWindow.showCalWindow" />
        <element api="F:PresentationLogic.MainWindow.controller" />
        <element api="F:PresentationLogic.MainWindow.caldata" />
        <element api="F:PresentationLogic.MainWindow.PerformMeasurement_B" />
        <element api="F:PresentationLogic.MainWindow.PerformCalibration_B" />
        <element api="F:PresentationLogic.MainWindow.Exit_B" />
        <element api="F:PresentationLogic.MainWindow.English_RB" />
        <element api="F:PresentationLogic.MainWindow.Now_B" />
        <element api="F:PresentationLogic.MainWindow.Showmeassurement_B" />
        <element api="F:PresentationLogic.MainWindow.ShowCalibration_B" />
        <element api="F:PresentationLogic.MainWindow.TimeSince_L" />
        <element api="F:PresentationLogic.MainWindow._contentLoaded" />
        <element api="M:PresentationLogic.MainWindow.#ctor" />
        <element api="M:PresentationLogic.MainWindow.TimeSince" />
        <element api="M:PresentationLogic.MainWindow.PerformMeasurement_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.MainWindow.PerformCalibration_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.MainWindow.Exit_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.MainWindow.Emergency_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.MainWindow.Window_Loaded(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.MainWindow.ShowMeasurement_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.MainWindow.ShowCalibration_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.MainWindow.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.caldata">
      <apidata name="caldata" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.calibrationWindow">
      <apidata name="calibrationWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.dataWindow">
      <apidata name="dataWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.Emergency_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Emergency_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.emergencyWindow">
      <apidata name="emergencyWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.English_RB">
      <apidata name="English_RB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.RadioButton" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.Exit_B">
      <apidata name="Exit_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.Exit_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Exit_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.loginWindow">
      <apidata name="loginWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.measurementWindow">
      <apidata name="measurementWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.Now_B">
      <apidata name="Now_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.PerformCalibration_B">
      <apidata name="PerformCalibration_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.PerformCalibration_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="PerformCalibration_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.PerformMeasurement_B">
      <apidata name="PerformMeasurement_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.PerformMeasurement_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="PerformMeasurement_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.ShowCalibration_B">
      <apidata name="ShowCalibration_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.ShowCalibration_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ShowCalibration_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.showCalWindow">
      <apidata name="showCalWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.showDataWindow">
      <apidata name="showDataWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.Showmeassurement_B">
      <apidata name="Showmeassurement_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.ShowMeasurement_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ShowMeasurement_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.TimeSince">
      <apidata name="TimeSince" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MainWindow.TimeSince_L">
      <apidata name="TimeSince_L" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MainWindow.Window_Loaded(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Window_Loaded" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.MeasurementModel">
      <apidata name="MeasurementModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:PresentationLogic.MeasurementModel.Time" />
        <element api="F:PresentationLogic.MeasurementModel.RawData" />
        <element api="M:PresentationLogic.MeasurementModel.#ctor" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
      </containers>
    </api>
    <api id="M:PresentationLogic.MeasurementModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MeasurementModel" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MeasurementModel.RawData">
      <apidata name="RawData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MeasurementModel" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.MeasurementModel.Time">
      <apidata name="Time" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic" />
        <type api="T:PresentationLogic.MeasurementModel" ref="true" />
      </containers>
    </api>
    <api id="N:PresentationLogic.Windows">
      <apidata name="PresentationLogic.Windows" group="namespace" />
      <elements>
        <element api="T:PresentationLogic.Windows.CalibrationWindow" />
        <element api="T:PresentationLogic.Windows.DataWindow" />
        <element api="T:PresentationLogic.Windows.EmergencyPopUp" />
        <element api="T:PresentationLogic.Windows.LoginWindow" />
        <element api="T:PresentationLogic.Windows.MeasurementWindow" />
        <element api="T:PresentationLogic.Windows.ShowCalibrationWindow" />
        <element api="T:PresentationLogic.Windows.ShowDataWindow" />
      </elements>
    </api>
    <api id="T:PresentationLogic.Windows.CalibrationWindow">
      <apidata name="CalibrationWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.Windows.CalibrationWindow.mainWindow" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.controller" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.calibrationVal" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.calVal" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.chartCalVal" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.dataCalVal" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.dataReference" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.cali" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.r2" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.a" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.b" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.CalibrationChart" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.CalibrationValues_LB" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.referenceValue_TB" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.InsertValue_B" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.ExitToMainWindow_B" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.Done_B" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.AAndB_L" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow.Label_klar" />
        <element api="F:PresentationLogic.Windows.CalibrationWindow._contentLoaded" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller)" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.InsertValue_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.GetCalValue" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.MakeGraph" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.Done_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.GetZeroValue" />
        <element api="M:PresentationLogic.Windows.CalibrationWindow.InitializeComponent" />
        <element api="P:PresentationLogic.Windows.CalibrationWindow.XAxis" />
        <element api="P:PresentationLogic.Windows.CalibrationWindow.IsZeroActive" />
        <element api="P:PresentationLogic.Windows.CalibrationWindow.IscalibrationActive" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mw">
          <type api="T:PresentationLogic.MainWindow" ref="true" />
        </parameter>
        <parameter name="cr">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.a">
      <apidata name="a" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.b">
      <apidata name="b" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.cali">
      <apidata name="cali" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.ICalibration" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.CalibrationChart">
      <apidata name="CalibrationChart" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.Wpf.CartesianChart" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.calibrationVal">
      <apidata name="calibrationVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.CalibrationValues_LB">
      <apidata name="CalibrationValues_LB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.ListBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.calVal">
      <apidata name="calVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.Wpf.LineSeries" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.chartCalVal">
      <apidata name="chartCalVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.ChartValues`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.dataCalVal">
      <apidata name="dataCalVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.dataReference">
      <apidata name="dataReference" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.Done_B">
      <apidata name="Done_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.Done_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Done_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.ExitToMainWindow_B">
      <apidata name="ExitToMainWindow_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ExitToMainWindow_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.GetCalValue">
      <apidata name="GetCalValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.GetZeroValue">
      <apidata name="GetZeroValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.InsertValue_B">
      <apidata name="InsertValue_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.InsertValue_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="InsertValue_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.CalibrationWindow.IscalibrationActive">
      <apidata name="IscalibrationActive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IscalibrationActive" />
      <setter name="set_IscalibrationActive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.CalibrationWindow.IsZeroActive">
      <apidata name="IsZeroActive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsZeroActive" />
      <setter name="set_IsZeroActive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.Label_klar">
      <apidata name="Label_klar" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.mainWindow">
      <apidata name="mainWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.CalibrationWindow.MakeGraph">
      <apidata name="MakeGraph" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.r2">
      <apidata name="r2" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.referenceValue_TB">
      <apidata name="referenceValue_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.CalibrationWindow.XAxis">
      <apidata name="XAxis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XAxis" />
      <setter name="set_XAxis" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.CalibrationWindow.AAndB_L">
      <apidata name="AAndB_L" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.CalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.Windows.DataWindow">
      <apidata name="DataWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.Windows.DataWindow.mwWindow" />
        <element api="F:PresentationLogic.Windows.DataWindow.controller" />
        <element api="F:PresentationLogic.Windows.DataWindow.measurementWindow" />
        <element api="F:PresentationLogic.Windows.DataWindow.dataWindow" />
        <element api="F:PresentationLogic.Windows.DataWindow.calData" />
        <element api="F:PresentationLogic.Windows.DataWindow.zeroVal" />
        <element api="F:PresentationLogic.Windows.DataWindow.sysULimit_TB" />
        <element api="F:PresentationLogic.Windows.DataWindow.diaULimit_TB" />
        <element api="F:PresentationLogic.Windows.DataWindow.sysLLimit_TB" />
        <element api="F:PresentationLogic.Windows.DataWindow.diaLLimit_TB" />
        <element api="F:PresentationLogic.Windows.DataWindow.socSecNb_TB" />
        <element api="F:PresentationLogic.Windows.DataWindow.ExitToMainWindow_B" />
        <element api="F:PresentationLogic.Windows.DataWindow.Next_B" />
        <element api="F:PresentationLogic.Windows.DataWindow.Nulpunkt_l" />
        <element api="F:PresentationLogic.Windows.DataWindow.meanULimit_TB" />
        <element api="F:PresentationLogic.Windows.DataWindow.meanLLimit_TB" />
        <element api="F:PresentationLogic.Windows.DataWindow._contentLoaded" />
        <element api="M:PresentationLogic.Windows.DataWindow.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller,PresentationLogic.Windows.MeasurementWindow)" />
        <element api="M:PresentationLogic.Windows.DataWindow.ReceiveZeroValue" />
        <element api="M:PresentationLogic.Windows.DataWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.DataWindow.Next_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.DataWindow.Next_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)" />
        <element api="M:PresentationLogic.Windows.DataWindow.InitializeComponent" />
        <element api="P:PresentationLogic.Windows.DataWindow.IsZeroActive" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.DataWindow.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller,PresentationLogic.Windows.MeasurementWindow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mw">
          <type api="T:PresentationLogic.MainWindow" ref="true" />
        </parameter>
        <parameter name="cr">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
        <parameter name="ms">
          <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.calData">
      <apidata name="calData" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.dataWindow">
      <apidata name="dataWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.diaLLimit_TB">
      <apidata name="diaLLimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.diaULimit_TB">
      <apidata name="diaULimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.ExitToMainWindow_B">
      <apidata name="ExitToMainWindow_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.DataWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ExitToMainWindow_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.DataWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.DataWindow.IsZeroActive">
      <apidata name="IsZeroActive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsZeroActive" />
      <setter name="set_IsZeroActive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.meanLLimit_TB">
      <apidata name="meanLLimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.meanULimit_TB">
      <apidata name="meanULimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.measurementWindow">
      <apidata name="measurementWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.mwWindow">
      <apidata name="mwWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.Next_B">
      <apidata name="Next_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.DataWindow.Next_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Next_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.DataWindow.Next_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
      <apidata name="Next_KeyDown" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.Nulpunkt_l">
      <apidata name="Nulpunkt_l" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.DataWindow.ReceiveZeroValue">
      <apidata name="ReceiveZeroValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.socSecNb_TB">
      <apidata name="socSecNb_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.sysLLimit_TB">
      <apidata name="sysLLimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.sysULimit_TB">
      <apidata name="sysULimit_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.DataWindow.zeroVal">
      <apidata name="zeroVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.Windows.EmergencyPopUp">
      <apidata name="EmergencyPopUp" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.Windows.EmergencyPopUp.controller" />
        <element api="F:PresentationLogic.Windows.EmergencyPopUp.mw" />
        <element api="F:PresentationLogic.Windows.EmergencyPopUp.measurementWindow" />
        <element api="F:PresentationLogic.Windows.EmergencyPopUp.dataWindow" />
        <element api="F:PresentationLogic.Windows.EmergencyPopUp.Start_B" />
        <element api="F:PresentationLogic.Windows.EmergencyPopUp.Exit_B" />
        <element api="F:PresentationLogic.Windows.EmergencyPopUp.CPR_tb" />
        <element api="F:PresentationLogic.Windows.EmergencyPopUp._contentLoaded" />
        <element api="M:PresentationLogic.Windows.EmergencyPopUp.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller,PresentationLogic.Windows.MeasurementWindow)" />
        <element api="M:PresentationLogic.Windows.EmergencyPopUp.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.EmergencyPopUp.Start_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.EmergencyPopUp.Start_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)" />
        <element api="M:PresentationLogic.Windows.EmergencyPopUp.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.EmergencyPopUp.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller,PresentationLogic.Windows.MeasurementWindow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mw">
          <type api="T:PresentationLogic.MainWindow" ref="true" />
        </parameter>
        <parameter name="cr">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
        <parameter name="ms">
          <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp.CPR_tb">
      <apidata name="CPR_tb" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp.dataWindow">
      <apidata name="dataWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp.Exit_B">
      <apidata name="Exit_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.EmergencyPopUp.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ExitToMainWindow_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.EmergencyPopUp.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp.measurementWindow">
      <apidata name="measurementWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp.mw">
      <apidata name="mw" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.EmergencyPopUp.Start_B">
      <apidata name="Start_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.EmergencyPopUp.Start_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Start_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.EmergencyPopUp.Start_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
      <apidata name="Start_KeyDown" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.EmergencyPopUp" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.Windows.LoginWindow">
      <apidata name="LoginWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.Windows.LoginWindow.main" />
        <element api="F:PresentationLogic.Windows.LoginWindow.controller" />
        <element api="F:PresentationLogic.Windows.LoginWindow.userName_" />
        <element api="F:PresentationLogic.Windows.LoginWindow.Password_PWB" />
        <element api="F:PresentationLogic.Windows.LoginWindow.User_TB" />
        <element api="F:PresentationLogic.Windows.LoginWindow.Login_B" />
        <element api="F:PresentationLogic.Windows.LoginWindow.Exit_B" />
        <element api="F:PresentationLogic.Windows.LoginWindow._contentLoaded" />
        <element api="M:PresentationLogic.Windows.LoginWindow.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller)" />
        <element api="M:PresentationLogic.Windows.LoginWindow.Exit_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.LoginWindow.Login_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.LoginWindow.Login_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)" />
        <element api="M:PresentationLogic.Windows.LoginWindow.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.LoginWindow.#ctor(PresentationLogic.MainWindow,BuissnessLogic.Controller)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mw">
          <type api="T:PresentationLogic.MainWindow" ref="true" />
        </parameter>
        <parameter name="br">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow.Exit_B">
      <apidata name="Exit_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.LoginWindow.Exit_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Exit_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.LoginWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow.Login_B">
      <apidata name="Login_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.LoginWindow.Login_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Login_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.LoginWindow.Login_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
      <apidata name="Login_KeyDown" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow.main">
      <apidata name="main" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow.Password_PWB">
      <apidata name="Password_PWB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.PasswordBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow.User_TB">
      <apidata name="User_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.LoginWindow.userName_">
      <apidata name="userName_" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.LoginWindow" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.Windows.MeasurementWindow">
      <apidata name="MeasurementWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.Windows.MeasurementWindow.axisMax" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.axisMin" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.blinkOnSysDia" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.blinkOnMean" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.mainWindow" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.controller" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.dataWindow" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.changeddatawindow" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.measurements" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.Start_B" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.Stop_B" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.MuteAlarm_B" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.ExitToMainWindow_B" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.MeasurementChart" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.Puls_L" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.SysDia_L" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.Mean_L" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.ChangeLimitValues_B" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.BatteryStatus_L" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow.Filter_CB" />
        <element api="F:PresentationLogic.Windows.MeasurementWindow._contentLoaded" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.#ctor(BuissnessLogic.Controller,PresentationLogic.MainWindow,PresentationLogic.Windows.DataWindow)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.Start_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.Read" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.SetAxisLimits(System.DateTime)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.OnPropertyChanged(System.String)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.Stop_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.MuteAlarm_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.Alarm" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.ChangeLimitValues_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.MeasurementWindow.InitializeComponent" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.DateTimeFormatter" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.AxisStep" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.AxisUnit" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.ChartValues" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.IsReading" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.MuteAlarm" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.AxisMax" />
        <element api="P:PresentationLogic.Windows.MeasurementWindow.AxisMin" />
        <element api="E:PresentationLogic.Windows.MeasurementWindow.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.#ctor(BuissnessLogic.Controller,PresentationLogic.MainWindow,PresentationLogic.Windows.DataWindow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="cr">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
        <parameter name="mw">
          <type api="T:PresentationLogic.MainWindow" ref="true" />
        </parameter>
        <parameter name="dw">
          <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.Alarm">
      <apidata name="Alarm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.axisMax">
      <apidata name="axisMax" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.AxisMax">
      <apidata name="AxisMax" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AxisMax" />
      <setter name="set_AxisMax" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.axisMin">
      <apidata name="axisMin" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.AxisMin">
      <apidata name="AxisMin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AxisMin" />
      <setter name="set_AxisMin" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.AxisStep">
      <apidata name="AxisStep" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AxisStep" />
      <setter name="set_AxisStep" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.AxisUnit">
      <apidata name="AxisUnit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AxisUnit" />
      <setter name="set_AxisUnit" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.BatteryStatus_L">
      <apidata name="BatteryStatus_L" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.blinkOnMean">
      <apidata name="blinkOnMean" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.blinkOnSysDia">
      <apidata name="blinkOnSysDia" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.changeddatawindow">
      <apidata name="changeddatawindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.ChangeDataWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.ChangeLimitValues_B">
      <apidata name="ChangeLimitValues_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.ChangeLimitValues_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ChangeLimitValues_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.ChartValues">
      <apidata name="ChartValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChartValues" />
      <setter name="set_ChartValues" />
      <returns>
        <type api="T:LiveCharts.ChartValues`1" ref="true">
          <specialization>
            <type api="T:PresentationLogic.MeasurementModel" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.dataWindow">
      <apidata name="dataWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.Windows.DataWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.DateTimeFormatter">
      <apidata name="DateTimeFormatter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DateTimeFormatter" />
      <setter name="set_DateTimeFormatter" />
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.ExitToMainWindow_B">
      <apidata name="ExitToMainWindow_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ExitToMainWindow_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.Filter_CB">
      <apidata name="Filter_CB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.CheckBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.IsReading">
      <apidata name="IsReading" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReading" />
      <setter name="set_IsReading" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.mainWindow">
      <apidata name="mainWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.Mean_L">
      <apidata name="Mean_L" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.MeasurementChart">
      <apidata name="MeasurementChart" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.Wpf.CartesianChart" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.measurements">
      <apidata name="measurements" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.MeasurementWindow.MuteAlarm">
      <apidata name="MuteAlarm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MuteAlarm" />
      <setter name="set_MuteAlarm" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.MuteAlarm_B">
      <apidata name="MuteAlarm_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.MuteAlarm_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="MuteAlarm_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.OnPropertyChanged(System.String)">
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="propertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="E:PresentationLogic.Windows.MeasurementWindow.PropertyChanged">
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.Puls_L">
      <apidata name="Puls_L" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.Read">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.SetAxisLimits(System.DateTime)">
      <apidata name="SetAxisLimits" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="now">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.Start_B">
      <apidata name="Start_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.Start_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Start_B_Click" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.Stop_B">
      <apidata name="Stop_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.MeasurementWindow.Stop_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Stop_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.MeasurementWindow.SysDia_L">
      <apidata name="SysDia_L" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.MeasurementWindow" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.Windows.ShowCalibrationWindow">
      <apidata name="ShowCalibrationWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.mainWindow" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.controller" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.calData" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.dataCalVal" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.dataReference" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.calVal" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.chartCalVal" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.a" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.b" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.r2" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.zv" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.CalibrationChart" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.ExitToMainWindow_B" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.ShowCalibration_B" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow.Caldata_L" />
        <element api="F:PresentationLogic.Windows.ShowCalibrationWindow._contentLoaded" />
        <element api="M:PresentationLogic.Windows.ShowCalibrationWindow.#ctor(BuissnessLogic.Controller,PresentationLogic.MainWindow)" />
        <element api="M:PresentationLogic.Windows.ShowCalibrationWindow.ShowCalibration" />
        <element api="M:PresentationLogic.Windows.ShowCalibrationWindow.MakeGraph" />
        <element api="M:PresentationLogic.Windows.ShowCalibrationWindow.ExitToMainWindow_B_OnClick(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.ShowCalibrationWindow.ShowCalibration_B_OnClick(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.ShowCalibrationWindow.InitializeComponent" />
        <element api="P:PresentationLogic.Windows.ShowCalibrationWindow.XAxis" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowCalibrationWindow.#ctor(BuissnessLogic.Controller,PresentationLogic.MainWindow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="cr">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
        <parameter name="mw">
          <type api="T:PresentationLogic.MainWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.a">
      <apidata name="a" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.b">
      <apidata name="b" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.calData">
      <apidata name="calData" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_CalVal" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.Caldata_L">
      <apidata name="Caldata_L" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.CalibrationChart">
      <apidata name="CalibrationChart" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.Wpf.CartesianChart" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.calVal">
      <apidata name="calVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.Wpf.LineSeries" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.chartCalVal">
      <apidata name="chartCalVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.ChartValues`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.dataCalVal">
      <apidata name="dataCalVal" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.dataReference">
      <apidata name="dataReference" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.ExitToMainWindow_B">
      <apidata name="ExitToMainWindow_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowCalibrationWindow.ExitToMainWindow_B_OnClick(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ExitToMainWindow_B_OnClick" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowCalibrationWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.mainWindow">
      <apidata name="mainWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowCalibrationWindow.MakeGraph">
      <apidata name="MakeGraph" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.r2">
      <apidata name="r2" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowCalibrationWindow.ShowCalibration">
      <apidata name="ShowCalibration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.ShowCalibration_B">
      <apidata name="ShowCalibration_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowCalibrationWindow.ShowCalibration_B_OnClick(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ShowCalibration_B_OnClick" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.ShowCalibrationWindow.XAxis">
      <apidata name="XAxis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XAxis" />
      <setter name="set_XAxis" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowCalibrationWindow.zv">
      <apidata name="zv" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowCalibrationWindow" ref="true" />
      </containers>
    </api>
    <api id="T:PresentationLogic.Windows.ShowDataWindow">
      <apidata name="ShowDataWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:PresentationLogic.Windows.ShowDataWindow.mainWindow" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.controller" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.bPressure" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.chartBPressure" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.dataBPressure" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.socSecNb" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.measurementData_LB" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.socSecNb_TB" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.BloodPressureChart" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.ExitToMainWindow_B" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.Search_B" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow.ShowData_B" />
        <element api="F:PresentationLogic.Windows.ShowDataWindow._contentLoaded" />
        <element api="M:PresentationLogic.Windows.ShowDataWindow.#ctor(BuissnessLogic.Controller,PresentationLogic.MainWindow,System.String)" />
        <element api="M:PresentationLogic.Windows.ShowDataWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.ShowDataWindow.Search_B_Click(System.Object,System.Windows.RoutedEventArgs)" />
        <element api="M:PresentationLogic.Windows.ShowDataWindow.InitializeComponent" />
        <element api="P:PresentationLogic.Windows.ShowDataWindow.xAxis" />
        <element api="P:PresentationLogic.Windows.ShowDataWindow.YFormatter" />
      </elements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowDataWindow.#ctor(BuissnessLogic.Controller,PresentationLogic.MainWindow,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="cw">
          <type api="T:BuissnessLogic.Controller" ref="true" />
        </parameter>
        <parameter name="mw">
          <type api="T:PresentationLogic.MainWindow" ref="true" />
        </parameter>
        <parameter name="SocSecNb">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.BloodPressureChart">
      <apidata name="BloodPressureChart" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.Wpf.CartesianChart" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.bPressure">
      <apidata name="bPressure" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.Wpf.LineSeries" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.chartBPressure">
      <apidata name="chartBPressure" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:LiveCharts.ChartValues`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.controller">
      <apidata name="controller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:BuissnessLogic.Controller" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.dataBPressure">
      <apidata name="dataBPressure" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:DTO.DTO_Measurement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.ExitToMainWindow_B">
      <apidata name="ExitToMainWindow_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowDataWindow.ExitToMainWindow_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="ExitToMainWindow_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowDataWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.mainWindow">
      <apidata name="mainWindow" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:PresentationLogic.MainWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.measurementData_LB">
      <apidata name="measurementData_LB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.ListBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.Search_B">
      <apidata name="Search_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="M:PresentationLogic.Windows.ShowDataWindow.Search_B_Click(System.Object,System.Windows.RoutedEventArgs)">
      <apidata name="Search_B_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.ShowData_B">
      <apidata name="ShowData_B" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.socSecNb">
      <apidata name="socSecNb" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="F:PresentationLogic.Windows.ShowDataWindow.socSecNb_TB">
      <apidata name="socSecNb_TB" group="member" subgroup="field" />
      <memberdata visibility="assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.ShowDataWindow.xAxis">
      <apidata name="xAxis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_xAxis" />
      <setter name="set_xAxis" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
    <api id="P:PresentationLogic.Windows.ShowDataWindow.YFormatter">
      <apidata name="YFormatter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_YFormatter" />
      <setter name="set_YFormatter" />
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationLogic" module="PresentationLogic" kind="WindowsApplication" />
        <namespace api="N:PresentationLogic.Windows" />
        <type api="T:PresentationLogic.Windows.ShowDataWindow" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>